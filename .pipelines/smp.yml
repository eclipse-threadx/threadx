trigger:
- master

pr:
  branches:
    include:
      - master
  paths:
    include: 
      - ".pipelines/tx.yml"
      - "common_smp/**"
      - "samples/**"
      - "test/tx/**"
      - "utility/**"
      - "ports_smp/linux/gnu/**"


pool:
  vmImage: "ubuntu-22.04"

steps:
  - task: PipAuthenticate@1
    displayName: 'Pip Authenticate'
    inputs:
      # Provide list of feed names which you want to authenticate.
      # Project scoped feeds must include the project name in addition to the feed name.
      artifactFeeds: 'X-Ware/X-Ware_PublicPackages'

  - bash: sudo $(Build.SourcesDirectory)/scripts/install.sh
    displayName: 'Install softwares'

  - task: Bash@3
    displayName: 'SDL check'
    inputs:
      filePath: '$(Build.SourcesDirectory)/scripts/sdl_check.sh'

  - task: Bash@3
    displayName: 'Build'
    inputs:
      filePath: '$(Build.SourcesDirectory)/scripts/build_smp.sh'

  - task: Bash@3
    displayName: 'Test'
    inputs:
      filePath: '$(Build.SourcesDirectory)/scripts/test_smp.sh'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: 'PublishTestResults'
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '*/Testing/**/*.xml'
      searchFolder: '$(Build.SourcesDirectory)/test/smp/cmake/build'
      testRunTitle: 'SMP-Tests'
      buildConfiguration: 'Release'

  - task: CopyFiles@2
    condition: succeededOrFailed()
    displayName: 'CopyTestReports'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/test/smp/cmake'
      Contents: |
        build/*.txt
        build/*/Testing/**/*.xml
        coverage_report/**/*
      TargetFolder: '$(build.artifactstagingdirectory)/test_reports_SMP'

  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    displayName: 'PublishBuildArtifacts'
    inputs:
      pathToPublish: $(build.artifactstagingdirectory)

  - task: PublishCodeCoverageResults@1
    condition: succeededOrFailed()
    displayName: 'Test SMP (PublishCodeCoverageResults)'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Build.SourcesDirectory)/test/smp/cmake/coverage_report/default_build_coverage.xml'
      pathToSources: '$(Build.SourcesDirectory)/test/smp/cmake'
